<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AutodetectLanguage" xml:space="preserve">
    <value>自動検出</value>
  </data>
  <data name="KeyLMenu" xml:space="preserve">
    <value>左Alt</value>
  </data>
  <data name="KeyRMenu" xml:space="preserve">
    <value>右Alt</value>
  </data>
  <data name="KeyLControl" xml:space="preserve">
    <value>左Control</value>
  </data>
  <data name="KeyRControl" xml:space="preserve">
    <value>右Control</value>
  </data>
  <data name="KeyLWin" xml:space="preserve">
    <value>左Windows</value>
  </data>
  <data name="KeyRWin" xml:space="preserve">
    <value>右Windows</value>
  </data>
  <data name="KeyCapital" xml:space="preserve">
    <value>Caps Lock</value>
  </data>
  <data name="KeyNumLock" xml:space="preserve">
    <value>Num Lock</value>
  </data>
  <data name="KeyPause" xml:space="preserve">
    <value>Pause</value>
  </data>
  <data name="KeyApps" xml:space="preserve">
    <value>アプリケーション</value>
  </data>
  <data name="KeyEscape" xml:space="preserve">
    <value>Escape</value>
  </data>
  <data name="KeyConvert" xml:space="preserve">
    <value>変換</value>
  </data>
  <data name="KeyNonConvert" xml:space="preserve">
    <value>無変換</value>
  </data>
  <data name="KeyScroll" xml:space="preserve">
    <value>Scroll Lock</value>
  </data>
  <data name="KeySpace" xml:space="preserve">
    <value>スペース</value>
  </data>
  <data name="KeyReturn" xml:space="preserve">
    <value>Enter</value>
  </data>
  <data name="Composing" xml:space="preserve">
    <value>合成規則</value>
  </data>
  <data name="UseXorgRules" xml:space="preserve">
    <value>Xorgプロジェクトのシーケンスを使う</value>
  </data>
  <data name="UseXorgRulesToolTip" xml:space="preserve">
    <value>Xorgプロジェクト(http://www.x.org/)が提供する3,000個の合成シーケンスを使います。これらは標準的なLinuxシステムで最も使われているものです。</value>
  </data>
  <data name="UseXComposeRules" xml:space="preserve">
    <value>XComposeプロジェクトのシーケンスを使う</value>
  </data>
  <data name="UseXComposeRulesToolTip" xml:space="preserve">
    <value>XComposeオープンソースプロジェクト(https://github.com/kragen/xcompose)が提供する1,000個の合成シーケンスを使います。これらのシーケンスはXorgのものと整合性がない場合があります。</value>
  </data>
  <data name="UseEmojiRules" xml:space="preserve">
    <value>WinComposeの絵文字シーケンスを使う</value>
  </data>
  <data name="UseEmojiRulesToolTip" xml:space="preserve">
    <value>WinComposeの開発者と貢献者によって提供される絵文字用の合成シーケンスを使います。</value>
  </data>
  <data name="DebugWindow" xml:space="preserve">
    <value>デバッグウィンドウ</value>
  </data>
  <data name="ShowSequences" xml:space="preserve">
    <value>シーケンスを表示…</value>
  </data>
  <data name="Disable" xml:space="preserve">
    <value>無効にする</value>
  </data>
  <data name="Restart" xml:space="preserve">
    <value>再起動</value>
  </data>
  <data name="DonationPage" xml:space="preserve">
    <value>寄付</value>
  </data>
  <data name="VisitWebsite" xml:space="preserve">
    <value>ウェブサイトを表示</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>終了</value>
  </data>
  <data name="UnicodeCharacters" xml:space="preserve">
    <value>Unicode文字</value>
  </data>
  <data name="Sequences" xml:space="preserve">
    <value>シーケンス</value>
  </data>
  <data name="SwapOnInvalid" xml:space="preserve">
    <value>キーの順序交換を試す</value>
  </data>
  <data name="SwapOnInvalidToolTip" xml:space="preserve">
    <value>シーケンス中の2つのキーの順序交換を試します。例えばCompose E Aが無効な入力であるとき、代わりにCompose A Eを試します。</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>検索フィルタ:</value>
  </data>
  <data name="ComposeKey" xml:space="preserve">
    <value>Composeキー:</value>
  </data>
  <data name="ComposeKeyToolTip" xml:space="preserve">
    <value>Composeキーとなるキーを指定してください。</value>
  </data>
  <data name="ResetTimeout" xml:space="preserve">
    <value>タイムアウトをリセット</value>
  </data>
  <data name="UnicodeInput" xml:space="preserve">
    <value>上級者向けUnicode入力</value>
  </data>
  <data name="UnicodeInputToolTip" xml:space="preserve">
    <value>合成シーケンスが指定されていないUnicode文字も入力できるようにします。例えばU+1A3Fを出力するためにはCompose U 1 A 3 Fというシーケンスを入力します</value>
  </data>
  <data name="InvalidSequences" xml:space="preserve">
    <value>無効なシーケンスが入力されたとき</value>
  </data>
  <data name="CaseInsensitive" xml:space="preserve">
    <value>大文字小文字のみが異なるものがある場合は、それを使用する</value>
  </data>
  <data name="CaseInsensitiveToolTip" xml:space="preserve">
    <value>入力されたシーケンスそのものは存在しないものの、大文字小文字だけが異なるものは存在する場合、自動的に修正を行います。</value>
  </data>
  <data name="DiscardOnInvalid" xml:space="preserve">
    <value>入力した文字を捨てる</value>
  </data>
  <data name="DiscardOnInvalidToolTip" xml:space="preserve">
    <value>入力したシーケンスが存在しない場合、すべての入力を破棄します。デフォルトでは、入力された文字をComposeキーが押されなかったときのように出力します。</value>
  </data>
  <data name="BeepOnInvalid" xml:space="preserve">
    <value>ビープ音を鳴らす</value>
  </data>
  <data name="BeepOnInvalidToolTip" xml:space="preserve">
    <value>入力したシーケンスが存在しない場合、システム音を鳴らします。</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>表示言語:</value>
  </data>
  <data name="LanguageToolTip" xml:space="preserve">
    <value>WinComposeがインターフェースに使う言語を選んでください。デフォルトでは、システムの言語を使います。</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>閉じる</value>
  </data>
  <data name="CopyToClipboard" xml:space="preserve">
    <value>クリップボードにコピー</value>
  </data>
  <data name="Emoji" xml:space="preserve">
    <value>絵文字</value>
  </data>
  <data name="Apply" xml:space="preserve">
    <value>適用</value>
  </data>
  <data name="KeepOriginalKey" xml:space="preserve">
    <value>もとのComposeキーの動作を保つ</value>
  </data>
  <data name="KeepOriginalKeyToolTip" xml:space="preserve">
    <value>これを選択すると、WinComposeはもとの挙動をできるだけ保とうとします。たとえば、AltキーをComposeキーに指定した場合でも、Alt-Tabショートカットは従来通りの動作をします。</value>
  </data>
  <data name="InsertZwsp" xml:space="preserve">
    <value>Officeアプリ使用時ゼロ幅スペースを挿入する</value>
  </data>
  <data name="InsertZwspToolTip" xml:space="preserve">
    <value>Microsoft Officeのアプリケーションは、特定のUnicode文字を入力したときに、文書のフォントをフォントを変えてしまうバグがあります。この機能は、Unicode文字の後に、不可視スペースを挿入して、そのバグを回避します。</value>
  </data>
  <data name="EmulateCapsLock" xml:space="preserve">
    <value>両方のShiftキー押下でCaps Lockの代わりにする</value>
  </data>
  <data name="EmulateCapsLockToolTip" xml:space="preserve">
    <value>Caps LockをComposeキーに指定した場合、元の挙動は使うことできません。この機能は、両方のShiftを同時に押すことで、Caps LockをOnにすることができます。</value>
  </data>
  <data name="ShiftDisablesCapsLock" xml:space="preserve">
    <value>Shiftキーを押した時にはCaps Lockを無効にする</value>
  </data>
  <data name="ShiftDisablesCapsLockToolTip" xml:space="preserve">
    <value>Caps LockをComposeキーに指定した場合、元の挙動は使用できません。この機能は、Shiftキーを押すことでCaps LockをOffにすることができます。</value>
  </data>
  <data name="CapsLockCapitalizes" xml:space="preserve">
    <value>Caps Lockが有効な場合は常に大文字にする</value>
  </data>
  <data name="CapsLockCapitalizesToolTip" xml:space="preserve">
    <value>Caps Lockが有効な場合、“é”のようなアクセント付き文字を打つと、常に対応する大文字（この場合は “É”）が出力されます。</value>
  </data>
  <data name="Categories" xml:space="preserve">
    <value>カテゴリ</value>
  </data>
  <data name="InSelectedCategories" xml:space="preserve">
    <value>選択されたカテゴリ内を選択</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>設定 — WinCompose</value>
  </data>
  <data name="ShowOptions" xml:space="preserve">
    <value>設定…</value>
  </data>
  <data name="TrayToolTip" xml:space="preserve">
    <value>WinCompose v{2} on {0} ({1} 個のシーケンス)</value>
  </data>
  <data name="General" xml:space="preserve">
    <value>一般</value>
  </data>
  <data name="Behavior" xml:space="preserve">
    <value>挙動</value>
  </data>
  <data name="WindowTitle" xml:space="preserve">
    <value>シーケンス — WinCompose</value>
  </data>
  <data name="UserMacros" xml:space="preserve">
    <value>ユーザー定義マクロ</value>
  </data>
  <data name="DisabledToolTip" xml:space="preserve">
    <value>WinComposeは無効です</value>
  </data>
  <data name="KeyInsert" xml:space="preserve">
    <value>Insert</value>
  </data>
  <data name="TestTyping" xml:space="preserve">
    <value>試す</value>
  </data>
  <data name="Tweaks" xml:space="preserve">
    <value>詳細設定</value>
  </data>
  <data name="DelaySeconds" xml:space="preserve">
    <value>{0}秒</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>WinComposeについて</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>WinComposeのダウンロード {0}</value>
  </data>
  <data name="AboutBoxTitle" xml:space="preserve">
    <value>WinComposeについて</value>
  </data>
  <data name="Programming" xml:space="preserve">
    <value>プログラミング</value>
  </data>
  <data name="Translators" xml:space="preserve">
    <value>翻訳</value>
  </data>
  <data name="Authors" xml:space="preserve">
    <value>開発者</value>
  </data>
  <data name="License" xml:space="preserve">
    <value>ライセンス</value>
  </data>
  <data name="NeedRestart" xml:space="preserve">
    <value>設定項目によっては、WinComposeを再起動しないと反映されません。</value>
  </data>
  <data name="ReportBug" xml:space="preserve">
    <value>バグ報告</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>ヘルプ</value>
  </data>
  <data name="UpdatesToolTip" xml:space="preserve">
    <value>アップデートがあります。</value>
  </data>
  <data name="UserDefinedSequences" xml:space="preserve">
    <value>ユーザー定義シーケンス</value>
  </data>
  <data name="UserDefinedSequencesEdit" xml:space="preserve">
    <value>編集</value>
  </data>
  <data name="UserDefinedSequencesReload" xml:space="preserve">
    <value>再読み込み</value>
  </data>
  <data name="AllowInjected" xml:space="preserve">
    <value>キーの挿入を許可する</value>
  </data>
  <data name="AllowInjectedToolTip" xml:space="preserve">
    <value>AutoHotkeyやSynergyなどのソフトウェアを通じて入力されたキーを無視しないようにします</value>
  </data>
  <data name="KeyPrint" xml:space="preserve">
    <value>PrtScrn</value>
  </data>
  <data name="KeyDisabled" xml:space="preserve">
    <value>未指定</value>
  </data>
  <data name="CheckUpdates" xml:space="preserve">
    <value>アップデートがないか自動的に確認する</value>
  </data>
  <data name="CheckUpdatesToolTip" xml:space="preserve">
    <value>有効な場合、WinComposeは定期的にインターネットに接続し、新しいバージョンがないか確認します。アップデートが自動でインストールされることはありません。</value>
  </data>
  <data name="KeepIconVisible" xml:space="preserve">
    <value>通知領域のアイコンを常に表示する</value>
  </data>
  <data name="KeepIconVisibleToolTip" xml:space="preserve">
    <value>Windowsは通知領域のアイコンを一定時間が経つと自動的に消去します。この設定項目が有効な場合、常にアイコンが表示されるようになります。</value>
  </data>
  <data name="ChangeComposeKey" xml:space="preserve">
    <value>変更…</value>
  </data>
  <data name="CaptureComposeKey" xml:space="preserve">
    <value>Composeキーとして使うキーを入力してください。</value>
  </data>
  <data name="AddToFavorites" xml:space="preserve">
    <value>お気に入りに追加する</value>
  </data>
  <data name="DisableIcon" xml:space="preserve">
    <value>通知領域のアイコンを無効にする</value>
  </data>
  <data name="DisableIconToolTip" xml:space="preserve">
    <value>有効な場合、WinComposeは通知領域のアイコンを表示しません。このときWinComposeのインターフェースを開くにためにはスタートアップメニューから“WinCompose Settings”か“WinCompose Sequences”を選択する必要があります。</value>
  </data>
  <data name="KeyHome" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="KeyEnd" xml:space="preserve">
    <value>End</value>
  </data>
  <data name="KeyTab" xml:space="preserve">
    <value>Tab</value>
  </data>
  <data name="NoTimeout" xml:space="preserve">
    <value>タイムアウトなし</value>
  </data>
  <data name="Advanced" xml:space="preserve">
    <value>上級者向け</value>
  </data>
  <data name="IgnoreRegex" xml:space="preserve">
    <value>正規表現に合致するウィンドウを無視する:</value>
  </data>
  <data name="IgnoreRegexToolTip" xml:space="preserve">
    <value>現在開かれているウィンドウのクラスまたは名前がこの正規表現に合致する場合、WinComposeが完全に無効になります。</value>
  </data>
  <data name="AlwaysCompose" xml:space="preserve">
    <value>Composeキーの代替を常にComposeとして扱う</value>
  </data>
  <data name="AlwaysComposeToolTip" xml:space="preserve">
    <value>有効な場合、Composeキーに割り当てられているキーがすべてシーケンス中でComposeとして扱われます。デフォルトでは最初に押下されたキーのみがComposeキーとして扱われ、代替として設定されたキーは元の役割を保ちます。</value>
  </data>
  <data name="SpecialThanks" xml:space="preserve">
    <value>スペシャルサンクス</value>
  </data>
  <data name="RemoveFromFavorites" xml:space="preserve">
    <value>お気に入りから削除する</value>
  </data>
  <data name="Favorites" xml:space="preserve">
    <value>お気に入り</value>
  </data>
  <data name="TimeoutToolTip" xml:space="preserve">
    <value>設定した場合、一定時間キーボード入力が検出されないときに合成シーケンスをキャンセルします。</value>
  </data>
  <data name="KeyboardLed" xml:space="preserve">
    <value>キーボードLED</value>
  </data>
  <data name="KeyboardLedToolTip" xml:space="preserve">
    <value>設定した場合、合成シーケンスに対応するキーボードLEDが点灯します。</value>
  </data>
  <data name="KeyCompose" xml:space="preserve">
    <value>Compose</value>
  </data>
  <data name="AutoLaunch" xml:space="preserve">
    <value>ログイン時にWinComposeを起動する</value>
  </data>
  <data name="AutoLaunchToolTip" xml:space="preserve">
    <value>設定した場合、ユーザーがログインしたときにWinComposeが起動します。</value>
  </data>
  <data name="Accessibility" xml:space="preserve">
    <value>アクセシビリティ</value>
  </data>
  <data name="MustHoldCapsLock" xml:space="preserve">
    <value>Caps Lockは、押された間のみ有効です</value>
  </data>
  <data name="MustHoldCapsLockToolTip" xml:space="preserve">
    <value>Caps Lockを標準的な仕様のように二回押さなければならないのに対し、離すとすぐに無効になります。</value>
  </data>
  <data name="RunElevated" xml:space="preserve">
    <value>管理者権限で実行する（推奨）</value>
  </data>
  <data name="RunElevatedToolTip" xml:space="preserve">
    <value>WinComposeが管理者権限で実行されない場合、一部のアプリで合成が動作しないことがあります。 この設定は、そのような現象が発生する可能性を減らします。</value>
  </data>
</root>
