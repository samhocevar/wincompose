<Project Sdk="Microsoft.NET.Sdk.WindowsDesktop">
  <PropertyGroup>
    <Title>WinCompose</Title>
    <Product>WinCompose</Product>
    <Authors>Sam Hocevar</Authors>
    <Copyright>Copyright © 2015—2021 Sam Hocevar et al.</Copyright>
    <Description></Description>
    <OutputType>WinExe</OutputType>
    <RootNamespace>WinCompose</RootNamespace>
    <StartupObject>WinCompose.Program</StartupObject>
    <TargetFrameworks>net40</TargetFrameworks>
    <GenerateAssemblyFileVersionAttribute>false</GenerateAssemblyFileVersionAttribute>
    <GenerateAssemblyInformationalVersionAttribute>false</GenerateAssemblyInformationalVersionAttribute>
    <GenerateAssemblyVersionAttribute>false</GenerateAssemblyVersionAttribute>
    <UseWPF>true</UseWPF>
    <DefaultItemExcludes>
        $(DefaultItemExcludes);gitversion.json;**\*.swp;**\*~;
    </DefaultItemExcludes>
  </PropertyGroup>

  <UsingTask TaskName="GZipTask" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
    <ParameterGroup>
      <InputFile ParameterType="System.String" Required="true" />
      <OutputFile ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System.IO.Compression" />
      <Code Type="Fragment" Language="cs"><![CDATA[
          Directory.CreateDirectory(Path.GetDirectoryName(OutputFile));
          var data = File.ReadAllBytes(InputFile);
          using (var s = new FileStream(OutputFile, FileMode.Create))
              using (var gs = new GZipStream(s, CompressionMode.Compress, false))
                  gs.Write(data, 0, data.Length);
      ]]></Code>
    </Task>
  </UsingTask>
  <Target Name="CompressResources"
          BeforeTargets="BeforeBuild"
          Inputs="..\3rdparty\xorgproto\include\X11\keysymdef.h&#xD;&#xA;
                  ..\3rdparty\libx11\nls\en_US.UTF-8\Compose.pre&#xD;&#xA;
                  ..\3rdparty\xcompose\dotXCompose&#xD;&#xA;
                  ..\3rdparty\unicode-emoji\emoji-test.txt&#xD;&#xA;
				  ..\3rdparty\unicodetools\unicodetools\data\ucd\15.0.0\Blocks.txt"
          Outputs="$(OutputPath)\keysymdef.h.gz&#xD;&#xA;
                   $(OutputPath)\xorg.rules.gz&#xD;&#xA;
                   $(OutputPath)\xcompose.rules.gz&#xD;&#xA;
                   $(OutputPath)\emoji-test.txt.gz&#xD;&#xA;
				   $(OutputPath)\Blocks.txt.gz">
    <GZipTask InputFile="..\3rdparty\xorgproto\include\X11\keysymdef.h" OutputFile="$(OutputPath)\keysymdef.h.gz" />
    <GZipTask InputFile="..\3rdparty\libx11\nls\en_US.UTF-8\Compose.pre" OutputFile="$(OutputPath)\xorg.rules.gz" />
    <GZipTask InputFile="..\3rdparty\xcompose\dotXCompose" OutputFile="$(OutputPath)\xcompose.rules.gz" />
    <GZipTask InputFile="..\3rdparty\unicode-emoji\emoji-test.txt" OutputFile="$(OutputPath)\emoji-test.txt.gz" />
	<GZipTask InputFile="..\3rdparty\unicodetools\unicodetools\data\ucd\15.0.0\Blocks.txt" OutputFile="$(OutputPath)\Blocks.txt.gz"/>
  </Target>
  <ItemGroup>
    <Item Include="..\3rdparty\xorgproto\include\X11\keysymdef.h" />
    <Item Include="..\3rdparty\libx11\nls\en_US.UTF-8\Compose.pre" />
    <Item Include="..\3rdparty\xcompose\dotXCompose" />
    <Item Include="..\3rdparty\unicode-emoji\emoji-test.txt" />
	<Item Include="..\3rdparty\unicodetools\unicodetools\data\ucd\15.0.0\Blocks.txt" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Properties\Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <EmbeddedResource Update="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
      <SubType>Designer</SubType>
    </EmbeddedResource>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="$(OutputPath)\keysymdef.h.gz">
      <Visible>false</Visible>
      <LogicalName>keysymdef.h.gz</LogicalName>
    </EmbeddedResource>
    <EmbeddedResource Include="$(OutputPath)\xorg.rules.gz">
      <Visible>false</Visible>
      <LogicalName>xorg.rules.gz</LogicalName>
    </EmbeddedResource>
    <EmbeddedResource Include="$(OutputPath)\xcompose.rules.gz">
      <Visible>false</Visible>
      <LogicalName>xcompose.rules.gz</LogicalName>
    </EmbeddedResource>
    <EmbeddedResource Include="$(OutputPath)\emoji-test.txt.gz">
      <Visible>false</Visible>
      <LogicalName>emoji-test.txt.gz</LogicalName>
    </EmbeddedResource>
	<EmbeddedResource Include="$(OutputPath)\Blocks.txt.gz">
	  <Visible>false</Visible>
	  <LogicalName>Blocks.txt.gz</LogicalName>
	</EmbeddedResource>
  </ItemGroup>

  <ItemGroup>
    <Resource Include="res\contributors.html" />
    <Resource Include="res\copying.html" />
    <Resource Include="res\decal_active.png" />
    <Resource Include="res\decal_disabled.png" />
    <Resource Include="res\decal_idle.png" />
    <Resource Include="res\decal_update.png" />
    <Resource Include="res\icon_sequences.png" />
    <Resource Include="res\icon_settings.png" />
    <Resource Include="res\key_compose.png" />
    <Resource Include="res\key_empty.png" />
    <Resource Include="res\key_compose_big.png" />
  </ItemGroup>
  <ItemGroup>
    <Item Include="rules\DefaultUserSequences.txt" />
    <Item Include="rules\Emoji.txt" />
    <Item Include="rules\WinCompose.txt" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\3rdparty\wpf-notifyicon\src\NotifyIconWpf\NotifyIconWpf.csproj" />
    <ProjectReference Include="..\language\language.csproj" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="res\icon_normal.ico" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Emoji.Wpf" Version="0.3.3" />
    <PackageReference Include="GitVersion.MsBuild" Version="5.6.10" PrivateAssets="all">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="NLog" Version="4.7.10" />
    <PackageReference Include="Stfu" Version="0.1.5" />
  </ItemGroup>

  <Target Name="InsertIcons" AfterTargets="AfterBuild">
    <!-- Icons are loaded alphabetically: icon_normal.ico icon_sequences.ico icon_settings.ico -->
    <Exec Command="..\3rdparty\inserticons\bin\$(Configuration)\InsertIcons.exe $(OutputPath)$(TargetName).exe res" />
  </Target>
</Project>
